a{
  cursor: pointer;
}
.MuiCard-root {
  cursor: pointer;
}

body {
  color: inherit; /* Remet la couleur du texte à sa valeur par défaut */
  background-color: inherit; /* Remet la couleur d'arrière-plan à sa valeur par défaut */
  /* Ajoutez toutes les autres propriétés que vous souhaitez surcharger */

}
.navbar__logo {
  will-change: transform;
  transform-origin: center;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.navbar__brand:hover .navbar__logo {
  animation: shake 0.4s ease;
}

.cls-1,.cls-2{fill:#003dff;}.cls-2{fill-rule:evenodd;}

/* CSS pour le bouton toggle personnalisé */
.toggleButtonCustom {
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 10px 10px !important; /* Augmenter le padding pour élargir la zone cliquable */
  font-size: 14px;
  font-weight: bold; /* Mettre le texte en gras */
  cursor: pointer;
  transition: background-color 0.3s;
  display: flex;
  align-items: center;
}

.toggleButtonCustom:hover {
  background: var(--ifm-color-emphasis-200);
  color: var(--ifm-navbar-link-hover-color);
}

.toggleButtonCustom span {
  margin-right: 5px;
}

.toggle-container {
  display: flex;
  align-items: center;
}

.colorModeToggleCustom {
  display: flex;
  align-items: center;
  margin-left: 10px;
}
.toggleButton_x9TT {
  padding: 5px !important; /* Augmenter le padding pour élargir la zone cliquable */
}

.carousel .control-arrow {
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
}

.carousel:hover .control-arrow {
  opacity: 1;
}
/* CSS pour supprimer l'espace après les titres h4 dans un tableau */

table {
  width: fit-content !important; /* Ajuste la largeur au contenu */
  box-shadow: 5px 5px gainsboro !important; /* Ombre nette en bas et à droite */

  border: 1px solid lightgray;
  display: block; /* Pour ajuster la largeur au contenu */
  border-spacing: 0px !important;
  border-collapse: separate !important;
  margin-top: 20px;
  margin-bottom: 25px !important;

}
[data-theme="dark"] table {
  box-shadow: none !important; /* Ombre nette en bas et à droite */

}

td h4 {
  margin: 0;
  font-size: 100% !important;
  font-weight: bold;
  text-transform: uppercase !important;
  text-align: center;
  
}

[data-theme="dark"] td:has(h4) {
  background-color: #193c47 !important; /* Ou la couleur de fond souhaitée pour ces cellules */
}
td:has(h4) {
  background-color: #eef9fd !important; /* Ou la couleur de fond souhaitée pour ces cellules */
}

td p:last-child,
td ul:last-child {
  margin-bottom: 0;
}
td p:has(+ ul) {
  margin-bottom: 0;
}

td ul {
  list-style-type: none; /* Supprime les puces par défaut */
  padding-left: 0; /* Supprime le padding par défaut de la liste */
}

td ul li {
  margin-top: 0px !important; /* Supprime le margin-top si nécessaire */
  padding-left: 15px; /* Ajoute un padding pour laisser de la place pour le tiret */
  position: relative; /* Position relative pour le pseudo-élément */
}

td ul li::before {
  content: "- "; /* Ajoute un tiret avant chaque élément de la liste */
  position: absolute; /* Position absolue pour placer le tiret */
  left: 0; /* Place le tiret à gauche */
}


td {
  font-size: 85%; /* Réduit la taille du texte de 20% */
  padding: 7px !important;

  
}
[data-theme="dark"] td:has(h3) {
  background-color: #1b5f73 !important; /* Ou la couleur de fond souhaitée pour ces cellules */
  
}
td:has(h3) {
  background-color: #c4eafb !important; /* Ou la couleur de fond souhaitée pour ces cellules */
  border-bottom: 1px solid lightgray !important;
}

td h3 {

  margin: 0 !important;
  font-size: 120% !important;
  text-align: center;
  font-weight: bold;
 
}


figure.image {
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: auto;
  margin-inline-end: auto;
  display: flex;
  justify-content: center;
  align-items: center;

}
.modal-image-container img {
  width: 100%;
  max-height: 60vh;
  display: block;
  cursor: pointer;
  object-fit: contain;
  opacity: 1;
}
td figure.image > div {
  margin-bottom: 0 !important;
}

.admonitionContent_Knsx > :last-child {
  margin-bottom: 0 !important;
}

body {
  counter-reset: h2counter;
}
h2 {
  counter-increment: h2counter;
}
h2::before {
  content: counter(h2counter) ". ";
}

